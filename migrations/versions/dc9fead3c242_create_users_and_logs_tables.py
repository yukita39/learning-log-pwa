"""create users and logs tables

Revision ID: dc9fead3c242
Revises: ccd4fe87659e
Create Date: 2025-06-27 11:17:04.839247

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dc9fead3c242'
down_revision: Union[str, Sequence[str], None] = 'ccd4fe87659e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('impression', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('users', 'calendar_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_column('users', 'duration')
    op.drop_column('users', 'tags')
    op.drop_column('users', 'date')
    op.drop_column('users', 'start_time')
    op.drop_column('users', 'content')
    op.drop_column('users', 'impression')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('impression', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('tags', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False))
    op.alter_column('users', 'calendar_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_table('logs')
    # ### end Alembic commands ###
